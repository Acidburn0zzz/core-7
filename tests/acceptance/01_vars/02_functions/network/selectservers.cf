# Test that failure to connect to remote host does not result in "Could not
# close socket" error messages.

body common control
{
      inputs => { "../../../default.cf.sub" };
      bundlesequence  => { default("$(this.promise_filename)") };
      version => "1.0";
}

bundle agent init
{
}

bundle agent test
{
  vars:
      "hosts"     slist   => { "cfengine.com", "ntua.gr" };
      "retval"    int     => selectservers("@(hosts)","80","","","100","alive_servers");
}

bundle agent check
{
  classes:
      "up_servers"   expression => isgreaterthan("$(test.retval)", "0");
      "first_is_ok"  expression => isvariable("test.alive_servers[0]");
      "second_is_ok" expression => isvariable("test.alive_servers[1]");
      "third_is_bad"        not => isvariable("test.alive_servers[2]");

  reports:
    DEBUG::
      "retval:        $(test.retval)";
      "alive_servers: $(test.alive_servers[0]) $(test.alive_servers[1]) $(test.alive_servers[2])";
    DEBUG.up_servers::   "up_servers";
    DEBUG.first_is_ok::  "first_is_ok";
    DEBUG.second_is_ok:: "second_is_ok";
    DEBUG.third_is_bad:: "third_is_bad";

    up_servers.first_is_ok.second_is_ok.third_is_bad::
      "$(this.promise_filename) Pass";
    !up_servers|!first_is_ok|!second_is_ok|!third_is_bad::
      "$(this.promise_filename) FAIL";
}

