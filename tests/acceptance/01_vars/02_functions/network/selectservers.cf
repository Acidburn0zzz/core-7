# Test that failure to connect to remote host does not result in "Could not
# close socket" error messages.

body common control
{
      inputs => { "../../../default.cf.sub" };
      bundlesequence  => { default("$(this.promise_filename)") };
      version => "1.0";
}

bundle agent init
{
}

bundle agent test
{
  vars:

      # The first two hosts listen to port 80, the third does not listen
      # to port 80, the fourth does not even resolve
      "hosts"     slist   => { "cfengine.com", "ntua.gr", "8.8.8.8", "inexistent-server" };
      "retval"    int     => selectservers("@(hosts)","80","","","100","alive_servers");
}

bundle agent check
{
  classes:
      "up2servers"   expression => strcmp("$(test.retval)", "2");

      "first_is_ok"  expression => isvariable("test.alive_servers[0]");
      "second_is_ok" expression => isvariable("test.alive_servers[1]");
      "third_is_bad"        not => isvariable("test.alive_servers[2]");
      "fourth_is_bad"       not => isvariable("test.alive_servers[3]");
      "fifth_is_bad"        not => isvariable("test.alive_servers[4]");

  reports:
    DEBUG::
      "retval:        $(test.retval)";
      "alive_servers: $(test.alive_servers[0]) $(test.alive_servers[1]) $(test.alive_servers[2])";
    DEBUG.up2servers::   "up2servers";
    DEBUG.first_is_ok::  "first_is_ok";
    DEBUG.second_is_ok:: "second_is_ok";
    DEBUG.third_is_bad:: "third_is_bad";
    DEBUG.fourth_is_bad::"fourth_is_bad";

    up2servers.first_is_ok.second_is_ok.third_is_bad.fourth_is_bad::
      "$(this.promise_filename) Pass";
    !up2servers|!first_is_ok|!second_is_ok|!third_is_bad|!fourth_is_bad::
      "$(this.promise_filename) FAIL";
}

