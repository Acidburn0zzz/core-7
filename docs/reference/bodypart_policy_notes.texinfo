
Variables can either be allowed to change their value dynamically (be
redefined) or they can be constant. The use of private variable spaces
in CFEngine 3 makes it unlikely that variable redefinition would be
necessary in CFEngine 3.

The value @code{constant} indicates that the variable value may not be
changed.  The values @code{free} and @code{overridable} are synonymous, and
indicated the the variable's value may be changed.

The value @code{ifdefined} applies only to lists and implies that unexpanded
or undefined lists are dropped. The default behaviour is otherwise to
retain this value as an indicator of the failure to quench the variable
reference, e.g. 
@verbatim
   
    "one" slist => { "1", "2", "3" };

   "list" slist => { "@(one)", @(two) },

            policy => "ifdefined";

@end verbatim
@noindent would result in @samp{@@(list)} being the same as @samp{@@(one)},
and the reference to @samp{@@(two)} would disappear. This is useful for combining
lists, `inheritance-style' where one can extend a base with special cases if they
are defined.

@noindent @b{Default value}:@*
@*

@code{policy => constant}
