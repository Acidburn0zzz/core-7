
@i{These features are available only in Enterprise versions of CFEngine.}

CFEngine's monitoring component @code{cf-monitord} records a number
of performance data about the system by default. These include
process counts, service traffic, load average and cpu utilization and
temperature when available.

CFEngine Nova extends this in two ways. First it adds a three year
trend summary based any `shift'-averages. Second, it adds customizable
promises to monitor or log very specific user data through a
generic interface. The end result is to either generate a periodic
time series, like the above mentioned values, or to log the results to
custom-defined reports.


CFEngine Nova adds a new promise type in bundles for the monitoring
agent. These are written just like all other promises within a bundle
destined for the agent concerned (however, you do not need to add them
to the @code{bundlesequence} -- they are executed by @code{cf-monitord}
because they are bundles of type @code{monitor}). In this case:

@verbatim
bundle monitor watch

{
measurements:

  # promises ...

}

@end verbatim

It is important to specificy a promise @code{handle} for measurement
promises, as the names defined in the handle are used to determine the
name of the log file or variable to which data will be reported. Log
files are created under @file{WORKDIR/state}. Data that have no history
type are stored in a special variable context called @samp{mon}, analogous
to the system variables in @samp{sys}. Thus the values may be used
in other promises in the form @code{$(mon.handle)}.
